{"version":3,"sources":["webpack:///src/src/MainLayout.vue","app.css","webpack:///src/src/TransactionPage.vue","webpack:///src/HashesTable/src/HashesTable/HashesTable.vue","webpack:///src/src/TransactionsPage.vue"],"names":[],"mappings":"AAgCA,yBACA,mBAAA,CAAA,mBAAA,CAAA,YC5BA,CD+BA,uBACA,YAAA,CACA,eAAA,CACA,kBC7BA,CDgCA,0BACA,YAAA,CACA,eAAA,CACA,UC9BA,CDiCA,kDACA,uBACA,eC/BA,CACA,CDoCA,6CACA,eChCA,CCmHA,gCACA,mBAAA,CAAA,mBAAA,CAAA,YD7GA,CCgHA,oCACA,iBD9GA,CCiHA,oCACA,eD/GA,CCkHA,yCACA,aAAA,CACA,eDhHA,CEcA,oBACA,UFVA,CEaA,qBACA,iBAAA,CACA,kBAAA,CACA,UFXA,CEcA,qBACA,kBAAA,CACA,UAAA,CACA,gBFZA,CG4CA,yCAEA,WAAA,CACA,cAAA,CACA,aAAA,CACA,aHxCA,CG2CA,+BACA,YHzCA,CG8CA,wBACA,UAAA,CACA,oBAAA,CACA,WAAA,CACA,iBAAA,CACA,kBH1CA,CG6CA,gCACA,WAAA,CACA,iBAAA,CACA,oBH3CA,CG8CA,oCACA,mBAAA,CAAA,mBAAA,CAAA,YAAA,CACA,wBAAA,CAAA,qBAAA,CAAA,6BHxCA","file":"app.css","sourcesContent":["<template>\n    <div class=\"layout\">\n        <div class=\"menu\">\n            <b-nav vertical class=\"w-25\">\n                <b-nav-item>\n                    <router-link to=\"/contacts\" tag=\"a\">\n                        <font-awesome-icon icon=\"address-book\" />\n                        Contacts\n                    </router-link>\n                </b-nav-item>\n\n                <b-nav-item>\n                    <router-link to=\"/transactions\" tag=\"a\">\n                        <font-awesome-icon icon=\"exchange-alt\" />\n                        Transactions\n                    </router-link>\n                </b-nav-item>\n\n                <b-nav-item disabled>\n                    <font-awesome-icon icon=\"th-large\" />\n                    Blocks\n                </b-nav-item>\n            </b-nav>\n        </div>\n\n        <div class=\"content\">\n            <slot />\n        </div>\n    </div>\n</template>\n\n<style scoped>\n    .layout {\n        display: flex\n    }\n\n    .menu {\n        padding: 20px;\n        margin-top: 70px;\n        white-space: nowrap;\n    }\n\n    .content {\n        padding: 20px;\n        margin-top: 20px;\n        width: 100%;\n    }\n\n    @media screen and (max-height: calc(120px + 70px)) {\n        .menu {\n            margin-top: 20px;\n        }\n    }\n</style>\n\n<style>\n    .router-link-exact-active.router-link-active {\n        font-weight: bold;\n    }\n</style>\n","\n.layout[data-v-b063e5ca] {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex\n}\n.menu[data-v-b063e5ca] {\n    padding: 20px;\n    margin-top: 70px;\n    white-space: nowrap;\n}\n.content[data-v-b063e5ca] {\n    padding: 20px;\n    margin-top: 20px;\n    width: 100%;\n}\n@media screen and (max-height: calc(120px + 70px)) {\n.menu[data-v-b063e5ca] {\n        margin-top: 20px;\n}\n}\n\n\n.router-link-exact-active.router-link-active {\n    font-weight: bold;\n}\n\n\n.titled-blocks[data-v-178b5cff] {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n}\n.titled-blocks > div[data-v-178b5cff] {\n    margin-right: 16px;\n}\n.titled-blocks div[data-v-178b5cff] {\n    font-weight: bold;\n}\n.titled-blocks div span[data-v-178b5cff] {\n    color: darkgrey;\n    font-weight: normal;\n}\n\n\n.hashes-table__hash {\n    width: 50px\n}\n.hashes-table__icons {\n    text-align: center;\n    white-space: nowrap;\n    width: 50px;\n}\n.hashes-table__value {\n    white-space: nowrap;\n    width: 40px;\n    text-align: right;\n}\n\n\n.b-pagination > li > span,\n.b-pagination > li > a {\n    border: none;\n    font-size: 44px;\n    padding: 0 8px;\n    line-height: 1;\n}\n.page-link[role=menuitemradio] {\n    display: none;\n}\n\n\nselect[data-v-ce779276] {\n    width: 76px;\n    display: inline-block;\n    height: 32px;\n    margin-right: 10px;\n    vertical-align: sub;\n}\n.from-to-count[data-v-ce779276] {\n    width: 140px;\n    text-align: center;\n    display: inline-block\n}\n.pagination-header[data-v-ce779276] {\n    display: -webkit-box;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-pack: justify;\n        -ms-flex-pack: justify;\n            justify-content: space-between\n}\n\n\n/*# sourceMappingURL=app.css.map*/","<template>\n    <div>\n        <span>\n            <router-link :to=\"'/transactions'\" tag=\"a\">Transactions</router-link>\n            / <HashLink :hash=\"id\" :no-link=\"true\"/>\n        </span>\n\n        <br><br>\n        <h4>\n            Transaction Details\n            &nbsp;\n            <b-badge pill variant=\"success\" v-if=\"!loading\">{{ item.type || 'Unkonwn' }}</b-badge>\n\n            <b-spinner :label=\"'Loading transaction' + id\" small v-if=\"loading\"\n                       style=\"vertical-align: baseline\"/>\n        </h4>\n        <br><br>\n\n        <HashLink :hash=\"id\" target=\"_blank\">\n            &nbsp;&nbsp;\n            <font-awesome-icon icon=\"external-link-alt\"/>\n        </HashLink>\n\n        <div v-if=\"!loading\">\n            <div class=\"titled-blocks\">\n                <div>\n                    <span>From: </span>\n                    <HashLink :hash=\"item.from\"/>\n                </div>\n\n                <div>\n                    <span>To: </span>\n                    <HashLink :hash=\"item.to\"/>\n                </div>\n            </div>\n\n            <div class=\"titled-blocks\">\n                <div>\n                    <span>Status:</span> 0x1\n                </div>\n\n                <div>\n                    <span>Time:</span>\n                    <FromNow :time=\"item.timestamp\"/>\n                </div>\n            </div>\n\n            <br>\n            <br>\n\n            <div>\n                <h5 v-on:click=\"state.transactionsDetailsExpanded = !state.transactionsDetailsExpanded\"\n                    style=\"cursor: pointer;\">\n                    Additional Details\n                    <span style=\"user-select: none\">\n                        &nbsp;{{ state.transactionsDetailsExpanded ? '▼' : '▲' }}\n                    </span>\n                </h5>\n\n                <div v-if=\"state.transactionsDetailsExpanded\">\n                    <hr/>\n\n                    <div class=\"titled-blocks\">\n                        <div>\n                            <span>Input Bytecode: </span>\n                            <HashLink :hash=\"item.input\" :no-link=\"true\"/>\n                        </div>\n\n                        <div>\n                            <span>Block: </span>\n                            <HashLink :hash=\"item.blockNumber\" :no-link=\"true\"/>\n                        </div>\n                    </div>\n\n                    <div class=\"titled-blocks\">\n                        <div>\n                            <span>? Transaction Fee:</span> {{ item.gas }} Wei\n                        </div>\n                    </div>\n\n                    <div class=\"titled-blocks\">\n                        <div><span>Position: </span>{{ item.transactionIndex }}</div>\n\n                        <div><span>Nonce: </span> {{ item.nonce }}</div>\n                    </div>\n\n                    <div class=\"titled-blocks\">\n                        <div><span>? Gas Used: </span> {{ item.gas }} (?%)</div>\n\n                        <div><span>Gas Price: </span> {{ item.gasPrice }} Wei</div>\n                    </div>\n\n                    <div class=\"titled-blocks\">\n                        <div><span>? Value: </span> {{ item.value }} ETH / {{ item.gas }} Wei</div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import HashLink from './HashesTable/HashLink'\n    import FromNow from './HashesTable/FromNow'\n    import {transactionsViewModel} from './transactionsViewModel';\n    import Component from 'vue-class-component';\n    import {Vue, Watch} from 'vue-property-decorator'\n\n    export default @Component({\n        components: {HashLink, FromNow}\n    })\n    class TransactionsPage extends Vue {\n        mounted() {\n            this.state.loadTransaction(this.id)\n        }\n\n        data() {\n            return {state: transactionsViewModel}\n        }\n\n        get id() {\n            return this.$route.params.id\n        }\n\n        get loading() {\n            return this.state.loadingTransaction\n        }\n\n        get item() {\n            return this.state.selectedTransaction\n        }\n\n        @Watch('id')\n        onIdChanged() {\n            this.state.loadTransaction(this.id)\n        }\n    }\n</script>\n\n<style scoped>\n    .titled-blocks {\n        display: flex;\n    }\n\n    .titled-blocks > div {\n        margin-right: 16px;\n    }\n\n    .titled-blocks div {\n        font-weight: bold;\n    }\n\n    .titled-blocks div span {\n        color: darkgrey;\n        font-weight: normal;\n    }\n</style>","<template>\n    <b-table striped hover :items=\"items\" :fields=\"fields\">\n        <template slot=\"type\" slot-scope=\"item\">\n            <h4>\n                <b-badge  pill variant=\"success\">{{ item.value || 'Unknown' }}</b-badge>\n            </h4>\n        </template>\n\n        <template slot=\"hash\" slot-scope=\"item\">\n            <HashLink :hash=\"item.value\" />\n        </template>\n\n        <template slot=\"from\" slot-scope=\"item\" style=\"width: 50px\">\n            <HashLink :hash=\"item.value\" />\n        </template>\n\n        <template slot=\"arrow-empty-td\">\n            <font-awesome-icon icon=\"arrow-right\" />\n            &nbsp;\n            <font-awesome-icon icon=\"file\" />\n        </template>\n\n        <template slot=\"to\" slot-scope=\"item\">\n            <HashLink :hash=\"item.value\" />\n        </template>\n\n        <template slot=\"timestamp\" slot-scope=\"item\">\n            <FromNow :time=\"Date(item.value)\" />\n        </template>\n    </b-table>\n</template>\n\n<script>\n  import HashLink from './HashLink.vue';\n  import FromNow from './FromNow.vue';\n\n  export default {\n    components: { HashLink, FromNow },\n    props: ['items'],\n    data() {\n      return {\n        fields: [\n          { key: 'type', sortable: true },\n          { key: 'hash', width: 50, sortable: true, label: 'Hash', tdClass: 'hashes-table__hash' },\n          { key: 'from', sortable: true, tdClass: 'hashes-table__hash' },\n          { key: 'arrow-empty-td', sortable: false, label: '', tdClass: 'hashes-table__icons' },\n          { key: 'to', sortable: true, tdClass: 'hashes-table__hash' },\n          { key: 'value', sortable: true, formatter: num => `${ Number(num).toFixed(2) } ETH`, tdClass: 'hashes-table__value' },\n          { key: 'timestamp', label: 'Time', sortable: true }\n        ]\n      }\n    }\n  }\n</script>\n\n<style>\n    .hashes-table__hash {\n        width: 50px\n    }\n\n    .hashes-table__icons {\n        text-align: center;\n        white-space: nowrap;\n        width: 50px;\n    }\n\n    .hashes-table__value {\n        white-space: nowrap;\n        width: 40px;\n        text-align: right;\n    }\n</style>","<template>\n    <div>\n        <h1>\n            Transactions\n\n            <b-spinner label=\"Loading table\" v-if=\"loading\" style=\"vertical-align: baseline\" />\n        </h1>\n\n        <div class=\"pagination-header\" v-if=\"totalRows\">\n            <span>Showing {{ totalRows }} transactions</span>\n\n            <div style=\"display: flex; align-items: flex-end;\">\n                <b v-if=\"totalRows\">\n                    Rows per page:\n\n                    <b-form-select v-model=\"limit\" class=\"mb-3\">\n                        <option :value=\"item\" :key=\"item\" v-for=\"item in [10, 20, 50, 100, 500, 1000]\">\n                            {{ item }}\n                        </option>\n                    </b-form-select>\n\n                    <span class=\"from-to-count\">\n                        {{(limit * (page - 1)) + 1 }}-{{ Math.min(limit * page, totalRows) }}\n                        &nbsp;of&nbsp;\n                        {{ totalRows }}\n                    </span>\n                </b>\n\n                <b-pagination\n                        v-model=\"page\"\n                        :total-rows=\"totalRows\"\n                        :per-page=\"limit\"\n                        :limit=\"3\"\n                ></b-pagination>\n            </div>\n        </div>\n\n        <HashesTable :items=\"transactions\" :style=\"{opacity: loading ? 0.8 : 1}\" />\n    </div>\n</template>\n\n<script>\n  import { HashesTable } from './HashesTable';\n  import { transactionsViewModel } from './transactionsViewModel';\n  import Component from 'vue-class-component';\n  import { Vue, Watch } from 'vue-property-decorator'\n\n  export default @Component({ components: { HashesTable } })\n  class TransactionsPage extends Vue {\n    created() {\n      const { page = 1, limit = 10 } = this.$route.query || {};\n\n      this.page = page;\n      this.limit = limit;\n      this.state.loadTransactions({ page, limit })\n    }\n\n    data() {\n      return {\n        state: transactionsViewModel,\n        page: 1,\n        limit: 10\n      }\n    }\n\n    get loading() {\n      return this.state.loadingTransactions;\n    }\n\n    get transactions() {\n      return this.state.transactions.$mobx.values;\n    }\n\n    get totalRows() {\n      return this.state.totalRows\n    }\n\n    rememberPage() {\n      const query = { page: this.page, limit: this.limit };\n      this.state.loadTransactions(query)\n      this.$router.replace({ query });\n    }\n\n    @Watch('page')\n    onPageChanged() {\n      if (`${ this.page }` !== this.$route.page) {\n        this.rememberPage();\n      }\n    }\n\n    @Watch('limit')\n    onLimitChanged() {\n      if (`${ this.limit }` !== this.$route.limit) {\n        this.page = 1;\n        this.rememberPage();\n      }\n    }\n  }\n</script>\n\n<style>\n    .b-pagination > li > span,\n    .b-pagination > li > a {\n        border: none;\n        font-size: 44px;\n        padding: 0 8px;\n        line-height: 1;\n    }\n\n    .page-link[role=menuitemradio] {\n        display: none;\n    }\n</style>\n\n<style scoped>\n    select {\n        width: 76px;\n        display: inline-block;\n        height: 32px;\n        margin-right: 10px;\n        vertical-align: sub;\n    }\n\n    .from-to-count {\n        width: 140px;\n        text-align: center;\n        display: inline-block\n    }\n\n    .pagination-header {\n        display: flex;\n        justify-content: space-between\n    }\n</style>\n"]}